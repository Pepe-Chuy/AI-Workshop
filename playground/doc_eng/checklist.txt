=== CNN Training Mini Checklist (Keras + CIFAR-10) ===

âœ… Data Prep
- Normalize images: x / 255.0
- One-hot encode labels
- Split train / val / test
- Add augmentation (flip, rotate, shift)

âœ… Model Design
- Conv2D + ReLU + Pool â†’ repeat
- Gradually increase filters (32 â†’ 64 â†’ 128)
- Add Dropout (0.25â€“0.5) for regularization
- Use BatchNormalization for stability
- GlobalAveragePooling2D before Dense

âœ… Training
- Optimizer: Adam (lr=0.001 default)
- Batch size: 32 or 64
- Epochs: 20â€“50 (watch overfitting)
- Use callbacks:
  - EarlyStopping
  - ModelCheckpoint
  - ReduceLROnPlateau

âœ… Activations
- Hidden layers: ReLU
- Output: Softmax (num_classes=10)

âœ… Monitoring
- Plot train vs val accuracy/loss
- If val loss â†‘ while train loss â†“ â†’ overfitting
- Adjust dropout or use more data aug

âœ… Evaluation
- Use model.evaluate() on test set
- Check misclassified samples to learn weaknesses

âœ… Save & Load
- Save: model.save("cnn_model.h5")
- Load: keras.models.load_model("cnn_model.h5")

--------------------------------------------------------
ðŸŒŸ Golden Rules for First-Timers
- Start simple, add complexity later
- Change ONE parameter at a time
- Document what works (filters, lr, dropout, etc.)
- Donâ€™t chase 100% accuracy â€” focus on learning process
--------------------------------------------------------
